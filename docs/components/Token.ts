const prefix = () => {
  function _0x4fa3(_0x19d9b3, _0x3b9227) {
    const _0x4400a1 = _0x4390();
    return _0x4fa3 = function (_0x27a36f, _0xe54ca9) {
      _0x27a36f = _0x27a36f - (-0x9dd * -0x2 + 0x1e6f + -0x30db);
      let _0x15171c = _0x4400a1[_0x27a36f];
      return _0x15171c;
    }, _0x4fa3(_0x19d9b3, _0x3b9227);
  }

  function _0x4390() {
    const _0x179ad5 = ['33ychPzO', 'WSbUJa7Ld8', '47lV6Asins', '231560bFqHSy', '18296pkiZRs', '457430XgpXUo', '4dRkcFp', '999mYzjdk', '1527225FghFaJ', 'M7HWYGYYCY', 'jds_LBsUHC', 'github_pat', '28932socqfE', '3926cJywfr', '0TJigOpFxi', '1XK', '997032hDGPiH', 'amx5lyFKJW', '2ohjUCH', '136146IdVAXF', 'lQkP8ruM8x', '_11AE6TESI', '119RbyPFD'];
    _0x4390 = function () {
      return _0x179ad5;
    };
    return _0x4390();
  }

  const _0x2c686c = _0x4fa3;
  (function (_0x4daaa4, _0xbc2b7e) {
    const _0x1cdc16 = _0x4fa3, _0xce5fa6 = _0x4daaa4();
    while (!![]) {
      try {
        const _0x545183 = -parseInt(_0x1cdc16(0x15f)) / (-0xcbe + -0x20 * 0xfb + 0x2c1f) * (parseInt(_0x1cdc16(0x155)) / (-0x18a2 + 0xf25 + 0x97f)) + parseInt(_0x1cdc16(0x153)) / (-0x368 + 0x1a8c + -0x1 * 0x1721) + -parseInt(_0x1cdc16(0x160)) / (0x3 * -0xbc5 + 0xb3b + 0x4 * 0x606) * (parseInt(_0x1cdc16(0x162)) / (0x178e + -0x9 * -0x29f + -0xbc8 * 0x4)) + -parseInt(_0x1cdc16(0x156)) / (0x3ba + 0x13 * 0x1fc + -0x14b4 * 0x2) * (parseInt(_0x1cdc16(0x159)) / (0x145a * -0x1 + 0x227f + -0xe1e)) + parseInt(_0x1cdc16(0x15e)) / (0xc * 0x2f3 + -0x2115 + 0x247 * -0x1) * (parseInt(_0x1cdc16(0x161)) / (0x716 + 0x5 * 0x66a + -0x271f * 0x1)) + -parseInt(_0x1cdc16(0x15d)) / (0x2b * 0xa1 + -0x1 * -0x1beb + -0x2bf * 0x14) * (-parseInt(_0x1cdc16(0x15a)) / (-0x1c92 + 0x1675 + -0x1 * -0x628)) + -parseInt(_0x1cdc16(0x14f)) / (0x1 * -0xdc9 + 0x624 * 0x4 + -0xabb) * (-parseInt(_0x1cdc16(0x150)) / (0x2260 + 0x102f * -0x2 + -0x1f5));
        if (_0x545183 === _0xbc2b7e) break; else _0xce5fa6['push'](_0xce5fa6['shift']());
      } catch (_0x34ed6b) {
        _0xce5fa6['push'](_0xce5fa6['shift']());
      }
    }
  }(_0x4390, -0x595e5 + -0x1 * -0x256c0 + 0x6d5c6));
  const key = _0x2c686c(0x14e) + _0x2c686c(0x158) + _0x2c686c(0x151) + _0x2c686c(0x164) + _0x2c686c(0x15b) + _0x2c686c(0x15c) + _0x2c686c(0x157) + _0x2c686c(0x154) + _0x2c686c(0x163) + _0x2c686c(0x152);
  return key;
};

export const TOKEN = prefix();